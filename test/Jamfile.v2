#  Boost.Flags Library Test Jamfile
#
#  Copyright 2015-2019 Peter Dimov
#  Copyright 2024 Tobias Loew
#
#  Distributed under the Boost Software License, Version 1.0.
#  See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt

import os ;
import testing ;
import ../../config/checks/config : requires ;

project
  : requirements

#    [ requires cxx11_variadic_templates cxx11_template_aliases cxx11_decltype cxx11_hdr_tuple ]
#    <cxxstd>20
    <warnings>extra

    <toolset>msvc:<warnings-as-errors>on
    <toolset>gcc:<warnings-as-errors>on
    <toolset>clang:<warnings-as-errors>on

    <toolset>msvc:<cxxflags>"/Zc:__cplusplus"
  ;


run test_fail.cpp ;
compile-fail test_fail.cpp : <define>TEST_COMPILE_FAIL : test_fail_TEST_COMPILE_FAIL ;

run test_basics.cpp ;
run test_basics.cpp : : : <define>TEST_COMPILE_UNSCOPED : test_basics_UNSCOPED ;
compile-fail test_basics.cpp : <define>TEST_COMPILE_UNSCOPED <define>TEST_COMPILE_FAIL_UNSCOPED : test_basics_FAIL_UNSCOPED ;



run test_adl.cpp ;
run test_adl.cpp : : : <define>TEST_COMPILE_UNSCOPED : test_adl_UNSCOPED ;
compile-fail test_adl.cpp : <define>TEST_COMPILE_FAIL_ADL_1 : test_adl_FAIL_ADL_1 ;
compile-fail test_adl.cpp : <define>TEST_COMPILE_UNSCOPED <define>TEST_COMPILE_FAIL_ADL_1 : test_adl_UNSCOPED_FAIL_ADL_1 ;
compile-fail test_adl.cpp : <define>TEST_COMPILE_FAIL_ADL_2 : test_adl_FAIL_ADL_2 ;
compile-fail test_adl.cpp : <define>TEST_COMPILE_UNSCOPED <define>TEST_COMPILE_FAIL_ADL_2 : test_adl_UNSCOPED_FAIL_ADL_2 ;
run test_adl.cpp : : : <define>TEST_COMPILE_ADL_UTILITIES : test_adl_UTILITIES ;
run test_adl.cpp : : : <define>TEST_COMPILE_ADL_UTILITIES <define>TEST_COMPILE_UNSCOPED : test_adl_UTILITIES_UNSCOPED ;

run test_logical_and.cpp ;
run test_logical_and.cpp : : : <define>TEST_COMPILE_UNSCOPED : test_logical_and_UNSCOPED ;
compile-fail test_logical_and.cpp : <define>TEST_COMPILE_FAIL_NO_LOGICAL_OPERATOR : test_basics_FAIL_NO_LOGICAL_OPERATOR ;
compile-fail test_logical_and.cpp : <define>TEST_COMPILE_FAIL_NO_LOGICAL_OPERATOR <define>TEST_COMPILE_UNSCOPED : test_basics_FAIL_NO_LOGICAL_OPERATOR_UNSCOPED ;

run test_rel_ops.cpp ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_LT : test_rel_ops_FAIL_RELOPS_DELETE_LT ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_LE : test_rel_ops_FAIL_RELOPS_DELETE_LE ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_GT : test_rel_ops_FAIL_RELOPS_DELETE_GT ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_GE : test_rel_ops_FAIL_RELOPS_DELETE_GE ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_SPACESHIP : test_rel_ops_FAIL_RELOPS_DELETE_SPACESHIP ;

compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_LHS_LT : test_rel_ops_FAIL_RELOPS_DELETE_LHS_LT ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_LHS_LE : test_rel_ops_FAIL_RELOPS_DELETE_LHS_LE ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_LHS_GT : test_rel_ops_FAIL_RELOPS_DELETE_LHS_GT ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_LHS_GE : test_rel_ops_FAIL_RELOPS_DELETE_LHS_GE ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_LHS_SPACESHIP : test_rel_ops_FAIL_RELOPS_DELETE_LHS_SPACESHIP ;

compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_RHS_LT : test_rel_ops_FAIL_RELOPS_DELETE_RHS_LT ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_RHS_LE : test_rel_ops_FAIL_RELOPS_DELETE_RHS_LE ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_RHS_GT : test_rel_ops_FAIL_RELOPS_DELETE_RHS_GT ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_RHS_GE : test_rel_ops_FAIL_RELOPS_DELETE_RHS_GE ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_RHS_SPACESHIP : test_rel_ops_FAIL_RELOPS_DELETE_RHS_SPACESHIP ;

compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_MIXED_LT : test_rel_ops_FAIL_RELOPS_DELETE_MIXED_LT ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_MIXED_LE : test_rel_ops_FAIL_RELOPS_DELETE_MIXED_LE ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_MIXED_GT : test_rel_ops_FAIL_RELOPS_DELETE_MIXED_GT ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_MIXED_GE : test_rel_ops_FAIL_RELOPS_DELETE_MIXED_GE ;
compile-fail test_rel_ops.cpp : <define>TEST_COMPILE_FAIL_RELOPS_DELETE_MIXED_SPACESHIP : test_rel_ops_FAIL_RELOPS_DELETE_MIXED_SPACESHIP ;


run test_disable_complement.cpp ;


compile-fail test_incompat.cpp : <define>TEST_COMPILE_FAIL_WITH_ENABLED : test_incompat_FAIL_WITH_ENABLED ;
compile-fail test_incompat.cpp : <define>TEST_COMPILE_FAIL_WITH_NOT_ENABLED : test_incompat_FAIL_WITH_NOT_ENABLED ;

run test_utilities.cpp ;
run test_utilities.cpp : : : <define>TEST_COMPILE_UNSCOPED : test_utilities_UNSCOPED ;
compile-fail test_utilities.cpp : <define>TEST_COMPILE_FAIL_COMPLEMENT_ANY : test_utilities_FAIL_COMPLEMENT_ANY ;
compile-fail test_utilities.cpp : <define>TEST_COMPILE_FAIL_COMPLEMENT_NONE : test_utilities_FAIL_COMPLEMENT_NONE ;


local GCC_ON_WINDOWS = [ os.environ GCC_ON_WINDOWS ] ;

if $(GCC_ON_WINDOWS)-not-empty
{
    run test_linking.cpp test_basics_link.cpp test_disable_complement_link.cpp test_rel_ops_link.cpp test_utilities_link.cpp order_pizza_link.cpp : : : <define>TEST_FLAGS_LINKING <toolset>gcc,<cxxstd>11:<define>TEST_FLAGS_LINKING_GCC_MINGW <toolset>gcc,<cxxstd>14:<define>TEST_FLAGS_LINKING_GCC_MINGW ;
} 
else
{
    run test_linking.cpp test_basics_link.cpp test_disable_complement_link.cpp test_rel_ops_link.cpp test_utilities_link.cpp order_pizza_link.cpp : : : <define>TEST_FLAGS_LINKING  ;
}
    
run test_constexpr.cpp ;
run test_constexpr.cpp : : : <define>TEST_COMPILE_UNSCOPED : test_constexpr_UNSCOPED ;

run test_container_algorithm.cpp ;
compile-fail test_container_algorithm.cpp : <define>TEST_COMPILE_FAIL_CONTAINER_DELETE_LT <define>TEST_COMPILE_FAIL_SET : test_container_algorithm_FAIL_SET ;
compile-fail test_container_algorithm.cpp : <define>TEST_COMPILE_FAIL_CONTAINER_DELETE_LT <define>TEST_COMPILE_FAIL_MULTISET : test_container_algorithm_FAIL_MULTISET ;


# text example
run order_pizza.cpp ;
compile-fail order_pizza.cpp : <define>TEST_COMPILE_FAIL_ORDER_WITH_COMPLEMENT : order_pizza_FAIL_ORDER_WITH_COMPLEMENT ;
compile-fail order_pizza.cpp : <define>TEST_COMPILE_FAIL_MIX_INCOMPATIBLE : order_pizza_FAIL_MIX_INCOMPATIBLE ;
compile-fail order_pizza.cpp : <define>TEST_COMPILE_FAIL_ORDER_WRONG_DESSERT : order_pizza_FAIL_ORDER_WRONG_DESSERT ;


